#----------------------------------------- Configuration --------------------------------

image_size = "sm";
skip_frame = 1;    # skip n-1 frames every n frames
enable_resize = 0; # enable resize for better screen resolution compatibility at the cost of longer load times
speed = 2;         # animation speed
num_images = 125;

#----------------------------------------- Background --------------------------------

window_width = Window.GetWidth();
window_height = Window.GetHeight();

background.original_image = Image("background.png");
background.image = background.original_image.Scale(window_width, window_height);
background.sprite = Sprite(background.image);
background.SetX(0);
background.SetY(0);
background.SetZ(-100);

#----------------------------------------- Logo Animation --------------------------------

logo = null;
loongson = null;

fun load_image(i) {
  loongson[i].original_image = Image(image_size + "/" + i + ".png");
  if (enable_resize) {
    loongson[i].image = loongson[i].original_image.Scale(window_width / 1920.0 * 1200.0, window_width / 1920.0 * 900.0);
  }
  else {
    loongson[i].image = loongson[i].original_image;
  }
}

fun show_image(id) {
  logo.image = loongson[id].image;
  logo.sprite = Sprite(logo.image);
  logo.sprite.SetX(window_width  / 2 - logo.image.GetWidth()  / 2);
  logo.sprite.SetY(window_height / 2 - logo.image.GetHeight() / 2);
  logo.sprite.SetZ(100);
}

if (Plymouth.GetMode() == "boot") {
  for (i = 0; i < num_images; i += skip_frame) {
    load_image(i);
  }
  show_image(0);
  timer = 0;
  fun refresh() {
    timer++;
    if (timer % speed == 0){
      pic_num = Math.Min(num_images - 1, timer / speed * skip_frame);
      logo.sprite.SetImage(loongson[pic_num].image);
    }  
  }
  Plymouth.SetRefreshFunction(refresh);
} else {
  load_image(num_images - 1);
  show_image(num_images - 1);
}

#----------------------------------------- Dialogue --------------------------------

status = "normal";

fun dialog_setup()
  {
    local.box;
    local.lock;
    local.entry;
    
    box.image = Image("box.png");
    lock.image = Image("lock.png");
    entry.image = Image("entry.png");
    
    box.sprite = Sprite(box.image);
    box.x = Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
    box.y = Window.GetHeight() / 2 - box.image.GetHeight()/2;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);
    
    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
  }
    
fun dialog_opacity(opacity)
  {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);
    for (index = 0; dialog.bullet[index]; index++)
      {
        dialog.bullet[index].sprite.SetOpacity(opacity);
      }
  }

fun display_normal_callback ()
  {
    global.status = "normal";
    if (global.dialog)
      dialog_opacity (0);
  }

fun display_password_callback (prompt, bullets)
  {
    global.status = "password";
    if (!global.dialog)
	dialog_setup();
    else
	dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++)
      {
        if (!dialog.bullet[index])
          {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
          }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
      }
  }

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);

#----------------------------------------- Quit --------------------------------

fun quit_callback ()
{
  logo.sprite.SetOpacity (1);
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Message --------------------------------

message_sprite = Sprite();
message_sprite.SetPosition(10, 10, 10000);

fun message_callback (text)
{
  my_image = Image.Text(text, 1, 1, 1);
  message_sprite.SetImage(my_image);
}

Plymouth.SetMessageFunction(message_callback);
